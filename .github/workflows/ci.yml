name: API Automation Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      test-run:
        description: 'Run Tests (y/n)?'
        required: true
        default: 'y'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Cache do Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Dar permissão ao wrapper do Gradle
        run: chmod +x ./gradlew

      - name: Executar testes com Gradle
        run: ./gradlew clean test --info

      - name: Gerar relatório Allure
        run: ./gradlew allureReport

      - name: Publicar resumo do Allure no GitHub Actions
        if: always()
        run: |
          REPORT_URL="https://ruanosorio.github.io/apiautomation-restassured/"
          echo "## 📊 Relatório Allure" >> $GITHUB_STEP_SUMMARY
          echo "[Abrir relatório Allure]($REPORT_URL)" >> $GITHUB_STEP_SUMMARY

      - name: Publicar Allure Report no GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAT }}       # Personal Access Token com escopo repo
          publish_dir: ./build/reports/allure-report
          publish_branch: gh-pages
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          allow_empty_commit: true
